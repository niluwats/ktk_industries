package GUI;

import Database.DB;
import Model.Save;
import Model.Validation;
import java.awt.Color;
import java.sql.ResultSet;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Add_Product extends javax.swing.JFrame {

    int xMouse;
    int yMouse;

    String productBrand;
    String productCategory;
    String user = "Sample";

    Main_menu menu;
    Products productList;

    public Add_Product() {
        initComponents();
        loadProductBrand();
        loadProductType();
        generateID();
    }

    public Add_Product(Main_menu mMenu) {
        this();
        this.menu = mMenu;
        menu.setEnabled(false);
    }

    public Add_Product(String id, Products pro) {
        this();
        productList = pro;
        loadData(id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        product_Name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        unit = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        product_Category = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btn_Cancel = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        brand = new javax.swing.JComboBox<>();
        price = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        dateCreated = new javax.swing.JLabel();
        product_Code = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 128, 185)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 128, 185));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Product ");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 700, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(66, 73, 73));
        jLabel2.setText("Product Code");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 100, 25));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(66, 73, 73));
        jLabel3.setText("Brand Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 100, 25));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(66, 73, 73));
        jLabel4.setText("Unit");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 100, 25));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 73, 73));
        jLabel5.setText("Discription");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 100, 25));

        product_Name.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        product_Name.setForeground(new java.awt.Color(39, 55, 70));
        product_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                product_NameKeyTyped(evt);
            }
        });
        jPanel1.add(product_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 490, 25));

        description.setColumns(20);
        description.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        description.setForeground(new java.awt.Color(39, 55, 70));
        description.setLineWrap(true);
        description.setRows(5);
        description.setPreferredSize(new java.awt.Dimension(310, 100));
        description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descriptionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(description);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 320, 110));

        unit.setEditable(true);
        unit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        unit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select - ", "NOS", "Milimeter", "Centimeter", "Inch", "Foot", "Meter", "Kilometer", "Milligram", "Gram", "Kilogram", "Metric Ton", "Milliliter", "Liter" }));
        unit.setFocusable(false);
        jPanel1.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 180, 25));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(66, 73, 73));
        jLabel6.setText("Product Name");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 100, 25));

        product_Category.setEditable(true);
        product_Category.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        product_Category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Category -" }));
        product_Category.setFocusable(false);
        product_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_CategoryActionPerformed(evt);
            }
        });
        jPanel1.add(product_Category, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 180, 25));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(66, 73, 73));
        jLabel7.setText("Category");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 80, 25));

        btn_Cancel.setBackground(new java.awt.Color(179, 182, 183));
        btn_Cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Cancel.setText("Cancel");
        btn_Cancel.setBorder(null);
        btn_Cancel.setBorderPainted(false);
        btn_Cancel.setContentAreaFilled(false);
        btn_Cancel.setFocusPainted(false);
        btn_Cancel.setOpaque(true);
        btn_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_CancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_CancelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_CancelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_CancelMouseReleased(evt);
            }
        });
        jPanel1.add(btn_Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 340, 100, 30));

        btn_Add.setBackground(new java.awt.Color(41, 128, 185));
        btn_Add.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("Add");
        btn_Add.setBorder(null);
        btn_Add.setBorderPainted(false);
        btn_Add.setContentAreaFilled(false);
        btn_Add.setFocusPainted(false);
        btn_Add.setOpaque(true);
        btn_Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_AddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_AddMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_AddMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_AddMouseReleased(evt);
            }
        });
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 300, 100, 30));

        jLabel8.setBackground(new java.awt.Color(250, 251, 250));
        jLabel8.setOpaque(true);
        jLabel8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel8MouseDragged(evt);
            }
        });
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 663, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close_black.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusPainted(false);
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close_red_.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 1, 34, 32));

        brand.setEditable(true);
        brand.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        brand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Brand -" }));
        brand.setFocusable(false);
        brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandActionPerformed(evt);
            }
        });
        jPanel1.add(brand, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 180, 25));

        price.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        price.setForeground(new java.awt.Color(39, 55, 70));
        price.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        jPanel1.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 180, 25));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(66, 73, 73));
        jLabel10.setText("Retail Price");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 80, 25));

        dateCreated.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jPanel1.add(dateCreated, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 260, 30));

        product_Code.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jPanel1.add(product_Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 170, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_CancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseEntered
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseEntered

    private void btn_CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseExited
        btn_Cancel.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_CancelMouseExited

    private void btn_CancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMousePressed
        btn_Cancel.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_CancelMousePressed

    private void btn_CancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseReleased
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseReleased

    private void btn_AddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseEntered
        btn_Add.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_AddMouseEntered

    private void btn_AddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseExited
        btn_Add.setBackground(new Color(41, 128, 185));
    }//GEN-LAST:event_btn_AddMouseExited

    private void btn_AddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMousePressed
        btn_Add.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_AddMousePressed

    private void btn_AddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseReleased
        btn_Add.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_AddMouseReleased

    private void jLabel8MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel8MouseDragged

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel8MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //menu.setEnabled(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped
        Validation.setLength(evt, description.getText(), 10);
        char c = evt.getKeyChar();
        if (Character.isLetter(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_priceKeyTyped

    private void descriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionKeyTyped
        Validation.setLength(evt, description.getText(), 350);
    }//GEN-LAST:event_descriptionKeyTyped

    private void product_NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_NameKeyTyped
        Validation.setLength(evt, product_Name.getText(), 50);
    }//GEN-LAST:event_product_NameKeyTyped

    private void brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandActionPerformed
        try {
            ResultSet rs = DB.search(" SELECT idbrand FROM product_brand WHERE brand='" + brand.getSelectedItem().toString().trim() + "' ");
            if (rs.next()) {
                productBrand = rs.getString(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_brandActionPerformed

    private void product_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_CategoryActionPerformed
        try {
            ResultSet rs = DB.search(" SELECT idcategory FROM product_category WHERE category ='" + product_Category.getSelectedItem().toString().trim() + "' ");
            if (rs.next()) {
                productCategory = rs.getString(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_product_CategoryActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        if (product_Code.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter Product Code", "Please Check Product Code", JOptionPane.WARNING_MESSAGE);
        } else {
            if (false) {
                JOptionPane.showMessageDialog(this, "Already used this Product Code", "Please Check Product Code", JOptionPane.WARNING_MESSAGE);
            } else {
                if (brand.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(this, "Plaese Select A Brand", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (product_Category.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(this, "Plaese Product Category", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {
                        if (unit.getSelectedIndex() == 0) {
                            JOptionPane.showMessageDialog(this, "Please Select the Unit of Product", "Warning", JOptionPane.WARNING_MESSAGE);
                        } else {
                            if (product_Name.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Plaese enter the product name before save", "Warning", JOptionPane.WARNING_MESSAGE);
                            } else {
                                try {
                                    DB.iud("INSERT INTO product VALUES('" + product_Code.getText() + "','" + productBrand + "','" + productCategory + "','" + product_Name.getText()
                                            + "','" + unit.getSelectedItem().toString() + "','" + price.getText() + "','" + description.getText() + "', '1' ,'" + LocalDate.now() + "')");

                                    new Save().setVisible(true);
                                    clear();
                                  //  productList.loadData();
                                  generateID();
                                } catch (com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException e) {
                                    if (JOptionPane.showConfirmDialog(this, "Do you want save this details", "Update Product Details", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                                        try {
                                            DB.iud("UPDATE product SET productname='" + product_Name.getText() + "', retail_price='" + price.getText() + "' ,unit='" + unit.getSelectedItem().toString() + "', "
                                                    + "description='" + description.getText() + "' WHERE id_product='" + product_Code.getText() + "' ");

                                            productList.loadData();
                                            new Save().setVisible(true);
                                            clear();
                                            this.dispose();
                                            generateID();
                                            
                                        } catch (Exception ex) {
                                            ex.printStackTrace();
                                        }
                                    }

                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_AddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> brand;
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JLabel dateCreated;
    private javax.swing.JTextArea description;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField price;
    private javax.swing.JComboBox<String> product_Category;
    private javax.swing.JLabel product_Code;
    private javax.swing.JTextField product_Name;
    private javax.swing.JComboBox<String> unit;
    // End of variables declaration//GEN-END:variables

    private void loadData(String id) {
        try {

            ResultSet rs = DB.search(" SELECT product.id_product,product_brand.brand,product_category.category,product.productname,product.unit,"
                    + "FORMAT(product.retail_price,2) AS price,product.description,product.date_created FROM product INNER JOIN product_brand "
                    + "ON product.brand=product_brand.idbrand INNER JOIN product_category ON product.category=product_category.idcategory WHERE product.id_product='" + id + "' ");
            if (rs.next()) {
                product_Code.setText(rs.getString("id_product"));
                brand.setSelectedItem(rs.getString("brand"));
                brand.setEnabled(false);
                product_Category.setSelectedItem(rs.getString("category"));
                product_Category.setEnabled(false);
                product_Name.setText(rs.getString("productname"));
                unit.setSelectedItem(rs.getString("unit"));
                price.setText(rs.getString("price"));
                description.setText(rs.getString("description"));
                dateCreated.setText("Date Created           " + rs.getString("date_created"));
                btn_Add.setText("Save");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadProductBrand() {
        try {
            ResultSet rs = DB.search("SELECT brand FROM product_brand");
            while (rs.next()) {
                brand.addItem(" " + rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadProductType() {
        try {
            ResultSet rs = DB.search("SELECT category FROM product_category");
            while (rs.next()) {
                product_Category.addItem(" " + rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        product_Code.setText(null);
        brand.setSelectedIndex(0);
        product_Category.setSelectedIndex(0);
        product_Name.setText(null);
        unit.setSelectedIndex(0);
        description.setText(null);
        
        price.setText(null);
        dateCreated.setText(null);
    }
    
    private void generateID() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(id_product) AS id FROM product");
            if (rs.next()) {
                int rowcount = rs.getInt("id");
                rowcount++;
                product_Code.setText("PRD" + String.format("%0" + 4 + "d", rowcount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
