package GUI;

import Database.DB;
import Model.Save;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

public class Pay_Roll extends javax.swing.JFrame {

    public Pay_Roll() {
        initComponents();
        tableSettings();
        loadtoYearcmb();
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        sdf.format(d);
        jDateChooser1.setDate(d);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        basic_salary = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comm_rate = new javax.swing.JTextField();
        btn_calc = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cmb_department = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        nopay = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tot_gross = new javax.swing.JTextField();
        worked_days = new javax.swing.JTextField();
        tot_leaves = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmb_year = new javax.swing.JComboBox<>();
        cmb_month = new javax.swing.JComboBox<>();
        btn_Add1 = new javax.swing.JButton();
        incentiev_amt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 128, 185));
        jLabel1.setText("Custormer Registation");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(108, 108, 108));
        jLabel2.setText("Customer ID ");

        jTextField1.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(39, 55, 70));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1120, 620));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 25)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 128, 185));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pay Roll");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 30));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 73, 73));
        jLabel5.setText("Year");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 40, 25));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(66, 73, 73));
        jLabel6.setText("Total No pay");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 90, 25));

        basic_salary.setEditable(false);
        basic_salary.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        basic_salary.setForeground(new java.awt.Color(39, 55, 70));
        basic_salary.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(basic_salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 110, 25));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(66, 73, 73));
        jLabel8.setText("Commission %");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, 25));

        comm_rate.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        comm_rate.setForeground(new java.awt.Color(39, 55, 70));
        comm_rate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        comm_rate.setText("00");
        comm_rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comm_rateActionPerformed(evt);
            }
        });
        jPanel1.add(comm_rate, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 60, 25));

        btn_calc.setBackground(new java.awt.Color(41, 128, 185));
        btn_calc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_calc.setForeground(new java.awt.Color(255, 255, 255));
        btn_calc.setText("Calculate");
        btn_calc.setBorder(null);
        btn_calc.setBorderPainted(false);
        btn_calc.setContentAreaFilled(false);
        btn_calc.setFocusPainted(false);
        btn_calc.setOpaque(true);
        btn_calc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_calcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_calcMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_calcMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_calcMouseReleased(evt);
            }
        });
        btn_calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcActionPerformed(evt);
            }
        });
        jPanel1.add(btn_calc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 150, 90, 30));

        btn_clear.setBackground(new java.awt.Color(179, 182, 183));
        btn_clear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.setBorder(null);
        btn_clear.setBorderPainted(false);
        btn_clear.setContentAreaFilled(false);
        btn_clear.setFocusPainted(false);
        btn_clear.setOpaque(true);
        btn_clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_clearMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_clearMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_clearMouseReleased(evt);
            }
        });
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel1.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 580, 90, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "name", "", "basic salary", "<html>inc<br>grade<html/>", "incentive", "commission", "commission val", "net salary", "EPF", "ETF", "tot worked days", "tot leaves", "tot no pay", "tot deduction", "gross salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(14).setPreferredWidth(2);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 1100, 310));

        cmb_department.setEditable(true);
        cmb_department.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        cmb_department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -", "Human Resource", "Production", "Sales & Marketing", "Purchasing", "Finance" }));
        cmb_department.setFocusable(false);
        cmb_department.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_departmentActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_department, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 40, 190, 25));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(66, 73, 73));
        jLabel9.setText("Incentive amount");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, 25));

        nopay.setEditable(false);
        nopay.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        nopay.setForeground(new java.awt.Color(39, 55, 70));
        nopay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(nopay, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 60, 25));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(66, 73, 73));
        jLabel7.setText("Basic salary");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 80, 25));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(66, 73, 73));
        jLabel10.setText("Total worked days");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 120, 25));

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(66, 73, 73));
        jLabel12.setText("Total leaves taken");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 120, 25));

        tot_gross.setEditable(false);
        tot_gross.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        tot_gross.setForeground(new java.awt.Color(255, 51, 51));
        tot_gross.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tot_gross.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tot_grossActionPerformed(evt);
            }
        });
        jPanel1.add(tot_gross, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 130, 25));

        worked_days.setEditable(false);
        worked_days.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        worked_days.setForeground(new java.awt.Color(39, 55, 70));
        worked_days.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(worked_days, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 60, 25));

        tot_leaves.setEditable(false);
        tot_leaves.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        tot_leaves.setForeground(new java.awt.Color(39, 55, 70));
        tot_leaves.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(tot_leaves, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 70, -1));

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(66, 73, 73));
        jLabel11.setText("Department");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, 80, 25));

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(66, 73, 73));
        jLabel13.setText("Date");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 60, 25));

        cmb_year.setEditable(true);
        cmb_year.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        cmb_year.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmb_year.setFocusable(false);
        cmb_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_yearActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 90, 25));

        cmb_month.setEditable(true);
        cmb_month.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmb_month.setFocusable(false);
        cmb_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_monthActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 120, 25));

        btn_Add1.setBackground(new java.awt.Color(41, 128, 185));
        btn_Add1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Add1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add1.setText("Save");
        btn_Add1.setBorder(null);
        btn_Add1.setBorderPainted(false);
        btn_Add1.setContentAreaFilled(false);
        btn_Add1.setFocusPainted(false);
        btn_Add1.setOpaque(true);
        btn_Add1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_Add1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_Add1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_Add1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_Add1MouseReleased(evt);
            }
        });
        btn_Add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Add1ActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 580, 90, 30));

        incentiev_amt.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        incentiev_amt.setForeground(new java.awt.Color(39, 55, 70));
        incentiev_amt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        incentiev_amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incentiev_amtActionPerformed(evt);
            }
        });
        incentiev_amt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                incentiev_amtKeyTyped(evt);
            }
        });
        jPanel1.add(incentiev_amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 70, 25));

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(66, 73, 73));
        jLabel14.setText("Month");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 50, 25));

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setForeground(new java.awt.Color(39, 55, 70));
        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 120, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_calcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcMouseEntered
        btn_calc.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_calcMouseEntered

    private void btn_calcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcMouseExited
        btn_calc.setBackground(new Color(41, 128, 185));
    }//GEN-LAST:event_btn_calcMouseExited

    private void btn_calcMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcMousePressed
        btn_calc.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_calcMousePressed

    private void btn_calcMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcMouseReleased
        btn_calc.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_calcMouseReleased

    private void btn_clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseEntered
        btn_clear.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_clearMouseEntered

    private void btn_clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseExited
        btn_clear.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_clearMouseExited

    private void btn_clearMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMousePressed
        btn_clear.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_clearMousePressed

    private void btn_clearMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseReleased
        btn_clear.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_clearMouseReleased

    private void btn_calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        
        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Empty Fields", "Error - No data ", JOptionPane.ERROR_MESSAGE);
        } else {
            double wdays=0;
            double sal=0;
            double deduction = 0;
            double net_sal = 0;
            double gross_sal = 0;
            double total_gross_salaries = 0;
            double basic_sal = 0;
            double nopay = 0;
            double epf;
            double etf;

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                net_sal = Double.parseDouble(jTable1.getValueAt(i, 8).toString());
                basic_sal = Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                nopay = Double.parseDouble(jTable1.getValueAt(i, 13).toString());
                epf = Double.parseDouble(jTable1.getValueAt(i, 9).toString());
                etf = Double.parseDouble(jTable1.getValueAt(i, 10).toString());
                deduction = (basic_sal / 25 * nopay) + epf + etf;

                gross_sal = net_sal - deduction;
                jTable1.setValueAt(deduction+"", i, 14);
                jTable1.setValueAt(gross_sal+"", i, 15);
                total_gross_salaries = total_gross_salaries + gross_sal;
            }
            tot_gross.setText(total_gross_salaries + "");
        }
    }//GEN-LAST:event_btn_calcActionPerformed

    private void cmb_departmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_departmentActionPerformed
        if (cmb_month.getSelectedIndex() == 0) {

        } else {
            try {
                ResultSet rs = DB.search("SELECT * FROM payroll_status WHERE department='" + cmb_department.getSelectedItem().toString() + "' AND month='" + cmb_month.getSelectedItem().toString() + "' AND year='" + cmb_year.getSelectedItem().toString() + "' AND status='1'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Already saved", "", JOptionPane.INFORMATION_MESSAGE);
                    btn_Add1.setVisible(false);
                    btn_calc.setVisible(false);
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.setRowCount(0);
                } else {
                    btn_Add1.setVisible(true);
                    btn_calc.setVisible(true);
                    double full_days = 0;
                    double half_days_m = 0;
                    double half_days_e = 0;
                    double no_pay_hd_m = 0;
                    double no_pay_hd_e = 0;
                    double sl_m = 0;
                    double sl_e = 0;
                    double leaves = 0;
                    double nopays = 0;

                    clear_fields();

                    JComboBox c = new JComboBox();
                    c.addItem("A");
                    c.addItem("B");
                    c.addItem("C");
                    c.addItem("D");
                    JCheckBox cb = new JCheckBox();

                    try {

                        ResultSet rs0 = DB.search("SELECT employee.id_employee,fname,mname,basicSalary FROM employee INNER JOIN basicsalary ON employee.id_employee=basicsalary.id_employee WHERE employee.department='" + cmb_department.getSelectedItem().toString() + "'");
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);

                        while (rs0.next()) {
                            Vector v = new Vector();
                            v.add(rs0.getString("employee.id_employee"));
                            v.add(rs0.getString("fname"));
                            v.add(rs0.getString("mname"));
                            v.add(rs0.getDouble("basicSalary"));
                            v.add("A");
                            dtm.addRow(v);

                        }
                        jTable1.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(c));
                        tableSettings();

                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            ResultSet rss = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Present' AND id_employee='" + jTable1.getValueAt(i, 0) + "' ");
                            if (rss.next()) {
                                full_days = rss.getDouble("X");
                            }

                            ResultSet rs1 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='paid/Half day - Morning' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs1.next()) {
                                half_days_m = rs1.getDouble("X");
                            }
                            ResultSet rs2 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='paid/Half day - Evening' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs2.next()) {
                                half_days_e = rs2.getDouble("X");
                            }
                            ResultSet rs3 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Half day - Evening' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs3.next()) {
                                no_pay_hd_m = rs3.getDouble("X");
                            }
                            ResultSet rs4 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Half day - Evening' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs4.next()) {
                                no_pay_hd_e = rs4.getDouble("X");
                            }
                            ResultSet rs5 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Short leave - Morning' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs5.next()) {
                                sl_m = rs5.getDouble("X");
                            }
                            ResultSet rs6 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Short leave - Evening' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs6.next()) {
                                sl_e = rs6.getDouble("X");
                            }
                            ResultSet rs7 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Full day' AND id_employee='" + jTable1.getValueAt(i, 0) + "'");
                            if (rs7.next()) {
                                nopays = rs7.getDouble("X");
                            }
                            double workdays = full_days + half_days_m / 2 + half_days_e / 2 + no_pay_hd_m / 2 + no_pay_hd_e / 2 + sl_e + sl_m;
                            //worked_days.setText(workdays + "");

                            nopays = nopays + no_pay_hd_m / 2 + no_pay_hd_e / 2;
                            leaves = nopays + half_days_m / 2 + half_days_e / 2;

                            // tot_leaves.setText(leaves + "");
                            //nopay.setText(nopays + "");
                            jTable1.setValueAt(workdays, i, 11);
                            jTable1.setValueAt(leaves, i, 12);
                            jTable1.setValueAt(nopays, i, 13);

                            double epf_amount = 0;
                            double etf_amount = 0;

                            epf_amount = Double.parseDouble(jTable1.getValueAt(i, 3).toString()) * 5 / 100;
                            etf_amount = Double.parseDouble(jTable1.getValueAt(i, 3).toString()) * 3 / 100;

                            jTable1.setValueAt(epf_amount, i, 9);
                            jTable1.setValueAt(etf_amount, i, 10);
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cmb_departmentActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        basic_salary.setText(Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()) + "");
        calculateDays();
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmb_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_yearActionPerformed

    }//GEN-LAST:event_cmb_yearActionPerformed

    private void cmb_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_monthActionPerformed

    }//GEN-LAST:event_cmb_monthActionPerformed

    private void tot_grossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tot_grossActionPerformed

    }//GEN-LAST:event_tot_grossActionPerformed

    private void comm_rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comm_rateActionPerformed
        double basic_salary = 0;
        double commission_val;
        double comm_percent;
        double net_sal;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            if (jTable1.getValueAt(i, 6) == null) {
                jTable1.setValueAt(0.0, i, 7);
            } else {
                basic_salary = Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                comm_percent = Double.parseDouble(comm_rate.getText());
                commission_val = basic_salary * comm_percent / 100;
                jTable1.setValueAt(commission_val, i, 7);
            }
            net_sal = Double.parseDouble(jTable1.getValueAt(i, 3).toString()) + Double.parseDouble(jTable1.getValueAt(i, 5).toString()) + Double.parseDouble(jTable1.getValueAt(i, 7).toString());
            jTable1.setValueAt(net_sal, i, 8);
        }

    }//GEN-LAST:event_comm_rateActionPerformed

    private void btn_Add1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Add1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Add1MouseEntered

    private void btn_Add1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Add1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Add1MouseExited

    private void btn_Add1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Add1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Add1MousePressed

    private void btn_Add1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Add1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Add1MouseReleased

    private void btn_Add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Add1ActionPerformed

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No fields to save", "Error - No data", JOptionPane.ERROR_MESSAGE);

        } else {
            String date = new SimpleDateFormat("yyyy/MM/dd").format(jDateChooser1.getDate());
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to proceed?");
            if (x == 0) {
                try {
                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        DB.iud("insert into payroll(id_employee,date_saved,month,year,incentive_grade,incentive_val,commission_rate,commission_value,netsalary,epf,etf,tot_worked_hours,tot_leaves,tot_nopay,total_deduction,gross_salary) "
                                + "values('" + jTable1.getValueAt(i, 0) + "','" + date + "','" + cmb_month.getSelectedItem().toString() + "','" + cmb_year.getSelectedItem().toString() + "','" + jTable1.getValueAt(i, 4) + "','" + jTable1.getValueAt(i, 5) + "','" + comm_rate.getText() + "','" + jTable1.getValueAt(i, 7) + "','" + jTable1.getValueAt(i, 8) + "','" + jTable1.getValueAt(i, 9) + "','" + jTable1.getValueAt(i, 10) + "','" + jTable1.getValueAt(i, 11) + "','" + jTable1.getValueAt(i, 12) + "','" + jTable1.getValueAt(i, 13) + "','" + jTable1.getValueAt(i, 14) + "','" + jTable1.getValueAt(i, 15) + "')");
                    }
                    new Save().setVisible(true);
                     printpaysheet();
                    cmb_month.setSelectedIndex(0);
                    cmb_department.setSelectedIndex(0);
                    clear_fields();
                   
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_btn_Add1ActionPerformed

    private void incentiev_amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incentiev_amtActionPerformed
        double d = 0;
        double incent = Double.parseDouble(incentiev_amt.getText());

        try {
            for (int i = 0; i < jTable1.getRowCount(); i++) {

                ResultSet rs = DB.search("SELECT percentage as per FROM incentive WHERE grade='" + jTable1.getValueAt(i, 4).toString() + "'");
                if (rs.next()) {
                    d = rs.getDouble("per");
                    if (d == 100) {
                        jTable1.setValueAt(incent, i, 5);
                    } else if (d == 85) {
                        incent = incent * 85 / 100;
                        jTable1.setValueAt(incent, i, 5);
                    } else if (d == 65) {
                        incent = incent * 65 / 100;
                        jTable1.setValueAt(incent, i, 5);
                    } else if (d == 50) {
                        incent = incent * 50 / 100;
                        jTable1.setValueAt(incent, i, 5);
                    }
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_incentiev_amtActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clear_fields();
        cmb_month.setSelectedIndex(0);
        cmb_department.setSelectedIndex(0);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange

    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void incentiev_amtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_incentiev_amtKeyTyped
        Model.Validation.setDigitsOnly(evt);
    }//GEN-LAST:event_incentiev_amtKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pay_Roll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pay_Roll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pay_Roll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pay_Roll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pay_Roll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basic_salary;
    private javax.swing.JButton btn_Add1;
    private javax.swing.JButton btn_calc;
    private javax.swing.JButton btn_clear;
    private javax.swing.JComboBox<String> cmb_department;
    private javax.swing.JComboBox<String> cmb_month;
    private javax.swing.JComboBox<String> cmb_year;
    private javax.swing.JTextField comm_rate;
    private javax.swing.JTextField incentiev_amt;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nopay;
    private javax.swing.JTextField tot_gross;
    private javax.swing.JTextField tot_leaves;
    private javax.swing.JTextField worked_days;
    // End of variables declaration//GEN-END:variables

    private void tableSettings() {
        JTableHeader tableHeader = jTable1.getTableHeader();
        tableHeader.setFont(new Font("Calibri", Font.BOLD, 13));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer right = new DefaultTableCellRenderer();
        right.setHorizontalAlignment(JLabel.RIGHT);

        jTable1.getColumnModel().getColumn(2).setCellRenderer(center);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(right);
    }

    private void calculateDays() {
        double full_days = 0;
        double half_days_m = 0;
        double half_days_e = 0;
        double no_pay_hd_m = 0;
        double no_pay_hd_e = 0;
        double sl_m = 0;
        double sl_e = 0;
        double leaves = 0;
        double nopays = 0;

        try {
            ResultSet rs = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Present' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' ");
            if (rs.next()) {
                full_days = rs.getDouble("X");
            }

            ResultSet rs1 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='paid/Half day - Morning' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs1.next()) {
                half_days_m = rs1.getDouble("X");
            }
            ResultSet rs2 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='paid/Half day - Evening' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs2.next()) {
                half_days_e = rs2.getDouble("X");
            }
            ResultSet rs3 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Half day - Evening' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs3.next()) {
                no_pay_hd_m = rs3.getDouble("X");
            }
            ResultSet rs4 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Half day - Evening' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs4.next()) {
                no_pay_hd_e = rs4.getDouble("X");
            }
            ResultSet rs5 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Short leave - Morning' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs5.next()) {
                sl_m = rs5.getDouble("X");
            }
            ResultSet rs6 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='Short leave - Evening' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs6.next()) {
                sl_e = rs6.getDouble("X");
            }
            ResultSet rs7 = DB.search("SELECT COUNT(id_employee) AS X FROM attendance WHERE month(date)='" + cmb_month.getSelectedIndex() + "' AND year(date)='" + cmb_year.getSelectedItem().toString() + "' AND status='No pay/ Full day' AND id_employee='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs7.next()) {
                nopays = rs7.getDouble("X");
            }
            double workdays = full_days + half_days_m / 2 + half_days_e / 2 + no_pay_hd_m / 2 + no_pay_hd_e / 2 + sl_e + sl_m;
            worked_days.setText(workdays + "");

            nopays = nopays + no_pay_hd_m / 2 + no_pay_hd_e / 2;
            leaves = nopays + half_days_m / 2 + half_days_e / 2;

            tot_leaves.setText(leaves + "");
            nopay.setText(nopays + "");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void loadtoYearcmb() {
        for (int i = 0; i < 100; i++) {
            int x = 2019;
            x = x + i;
            cmb_year.addItem(x + "");
        }
    }

    private void clear_fields() {
        worked_days.setText(null);
        tot_leaves.setText(null);
        basic_salary.setText(null);
        tot_leaves.setText(null);
        incentiev_amt.setText(null);
        comm_rate.setText(null);
        nopay.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        tot_gross.setText(null);
    }

    private void printpaysheet() {
        try {
            System.out.println("1");
            String path = "iReport\\paysheet.jrxml";
            JasperReport js = JasperCompileManager.compileReport(path);
            Connection c;
            Class.forName("com.mysql.jdbc.Driver");
            c = DriverManager.getConnection("jdbc:mysql://localhost:3307/central_insdustries", "root", "123");
            JasperPrint jp = JasperFillManager.fillReport(js, null, c);
            JasperViewer.viewReport(jp, false);
            c.close();
            System.out.println("1");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
