package GUI;

import Database.DB;
import Model.Save;
import Model.Validation;
import Model.WarningMsg;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class BillOfMatrial extends javax.swing.JFrame {
    
    int xMouse;
    int yMouse;
    
    double avaRawQty;
    String rawStockNo;
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat decimal = new DecimalFormat("#,###.00");
    
    Main_menu menu = new Main_menu();
    String user = "Testing_User";
    
    public BillOfMatrial() {
        initComponents();
        date_BOM.setDate(new Date());
        generateID();
        tableSettings();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        topBar = new javax.swing.JLabel();
        btn_Exit = new javax.swing.JButton();
        heading = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        job_No = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        production_Section = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        job_Start = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        date_BOM = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_Qty = new javax.swing.JTextField();
        unit_Product = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_Save = new javax.swing.JButton();
        btn_Cancel = new javax.swing.JButton();
        job_End = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        product_Code = new javax.swing.JTextField();
        btn_SearchProduct = new javax.swing.JButton();
        productName = new javax.swing.JLabel();
        add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(41, 128, 185), 1, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topBar.setBackground(new java.awt.Color(250, 251, 250));
        topBar.setOpaque(true);
        topBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topBarMouseDragged(evt);
            }
        });
        topBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topBarMousePressed(evt);
            }
        });
        jPanel1.add(topBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 1165, 30));

        btn_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close_black.png"))); // NOI18N
        btn_Exit.setBorder(null);
        btn_Exit.setBorderPainted(false);
        btn_Exit.setContentAreaFilled(false);
        btn_Exit.setFocusPainted(false);
        btn_Exit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close_red_.png"))); // NOI18N
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1166, 1, 34, 32));

        heading.setFont(new java.awt.Font("Calibri", 1, 25)); // NOI18N
        heading.setForeground(new java.awt.Color(41, 128, 185));
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("Bill Of Materials");
        heading.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(heading, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 32, 1200, 30));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(66, 73, 73));
        jLabel4.setText("BOM Date");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 80, 70, 25));

        job_No.setBackground(new java.awt.Color(255, 255, 255));
        job_No.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        job_No.setForeground(new java.awt.Color(51, 51, 51));
        job_No.setText("PVC-0000008");
        jPanel1.add(job_No, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 230, 25));

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(66, 73, 73));
        jLabel13.setText("Request From");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 100, 25));

        production_Section.setEditable(true);
        production_Section.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        production_Section.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Secton -", "Section No:01" }));
        production_Section.setFocusable(false);
        jPanel1.add(production_Section, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 220, 25));

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(66, 73, 73));
        jLabel12.setText("JOB Start Date");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 100, 25));

        job_Start.setBackground(new java.awt.Color(255, 255, 255));
        job_Start.setDateFormatString("yyyy-MM-dd");
        job_Start.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jPanel1.add(job_Start, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 150, 25));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(66, 73, 73));
        jLabel7.setText("JOB Finish Date");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 110, 25));

        date_BOM.setBackground(new java.awt.Color(255, 255, 255));
        date_BOM.setDateFormatString("yyyy-MM-dd");
        date_BOM.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jPanel1.add(date_BOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 80, 150, 25));

        jSeparator1.setForeground(new java.awt.Color(41, 128, 185));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 165, 920, 10));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(66, 73, 73));
        jLabel9.setText("Product");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 70, 25));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(66, 73, 73));
        jLabel8.setText("Quantity");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 60, 25));

        txt_Qty.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        txt_Qty.setForeground(new java.awt.Color(39, 55, 70));
        txt_Qty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_QtyActionPerformed(evt);
            }
        });
        txt_Qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_QtyKeyTyped(evt);
            }
        });
        jPanel1.add(txt_Qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 150, 25));

        unit_Product.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        unit_Product.setForeground(new java.awt.Color(0, 102, 204));
        unit_Product.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(unit_Product, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 180, 80, 25));

        table.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock No", "Raw Material ID", "Raw Material", "Unit", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setGridColor(new java.awt.Color(255, 255, 255));
        table.setOpaque(false);
        table.setRowHeight(25);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(65);
            table.getColumnModel().getColumn(1).setPreferredWidth(150);
            table.getColumnModel().getColumn(2).setPreferredWidth(488);
            table.getColumnModel().getColumn(3).setPreferredWidth(120);
            table.getColumnModel().getColumn(4).setPreferredWidth(153);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 980, 410));

        btn_Save.setBackground(new java.awt.Color(41, 128, 185));
        btn_Save.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Save.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save.setText("Save");
        btn_Save.setBorder(null);
        btn_Save.setBorderPainted(false);
        btn_Save.setContentAreaFilled(false);
        btn_Save.setFocusPainted(false);
        btn_Save.setOpaque(true);
        btn_Save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_SaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_SaveMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_SaveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_SaveMouseReleased(evt);
            }
        });
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 240, 100, 30));

        btn_Cancel.setBackground(new java.awt.Color(179, 182, 183));
        btn_Cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Cancel.setText("Cancel");
        btn_Cancel.setBorder(null);
        btn_Cancel.setBorderPainted(false);
        btn_Cancel.setContentAreaFilled(false);
        btn_Cancel.setFocusPainted(false);
        btn_Cancel.setOpaque(true);
        btn_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_CancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_CancelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_CancelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_CancelMouseReleased(evt);
            }
        });
        btn_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 280, 100, 30));

        job_End.setBackground(new java.awt.Color(255, 255, 255));
        job_End.setDateFormatString("yyyy-MM-dd");
        job_End.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jPanel1.add(job_End, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, 150, 25));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 73, 73));
        jLabel5.setText("BOM No");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 60, 25));

        product_Code.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        product_Code.setForeground(new java.awt.Color(39, 55, 70));
        product_Code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_CodeActionPerformed(evt);
            }
        });
        product_Code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                product_CodeKeyReleased(evt);
            }
        });
        jPanel1.add(product_Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 220, 25));

        btn_SearchProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        btn_SearchProduct.setBorder(null);
        btn_SearchProduct.setBorderPainted(false);
        btn_SearchProduct.setContentAreaFilled(false);
        btn_SearchProduct.setFocusPainted(false);
        btn_SearchProduct.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.png"))); // NOI18N
        btn_SearchProduct.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search2.png"))); // NOI18N
        btn_SearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchProductActionPerformed(evt);
            }
        });
        jPanel1.add(btn_SearchProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 178, 30, 30));

        productName.setBackground(new java.awt.Color(255, 255, 255));
        productName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        productName.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(productName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 360, 20));

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        add.setBorder(null);
        add.setBorderPainted(false);
        add.setContentAreaFilled(false);
        add.setFocusPainted(false);
        add.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add3.png"))); // NOI18N
        add.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add2.png"))); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 178, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_DELETE) {
            ((DefaultTableModel) table.getModel()).removeRow(table.getSelectedRow());
        }
    }//GEN-LAST:event_tableKeyPressed

    private void btn_SaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseEntered
        btn_Save.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_SaveMouseEntered

    private void btn_SaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseExited
        btn_Save.setBackground(new Color(41, 128, 185));
    }//GEN-LAST:event_btn_SaveMouseExited

    private void btn_SaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMousePressed
        btn_Save.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_SaveMousePressed

    private void btn_SaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseReleased
        btn_Save.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_SaveMouseReleased

    private void btn_CancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseEntered
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseEntered

    private void btn_CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseExited
        btn_Cancel.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_CancelMouseExited

    private void btn_CancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMousePressed
        btn_Cancel.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_CancelMousePressed

    private void btn_CancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseReleased
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseReleased

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        
        this.dispose();
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void topBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topBarMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_topBarMousePressed

    private void topBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topBarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_topBarMouseDragged

    private void txt_QtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_QtyKeyTyped
        Validation.setDigitsOnly(evt);
    }//GEN-LAST:event_txt_QtyKeyTyped

    private void product_CodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_CodeActionPerformed
        txt_Qty.grabFocus();
    }//GEN-LAST:event_product_CodeActionPerformed

    private void product_CodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_CodeKeyReleased
        try {
            
            ResultSet rs = DB.search("SELECT id_product, productname, unit, description FROM product "
                    + "WHERE id_product like '" + product_Code.getText() + "%' OR productname like '" + product_Code.getText() + "%' ");
            
            while (rs.next()) {
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_product_CodeKeyReleased

    private void btn_SearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchProductActionPerformed
        SearchProduct sp = new SearchProduct(menu, this);
        sp.setVisible(true);
    }//GEN-LAST:event_btn_SearchProductActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if (product_Code.getText().isEmpty() | txt_Qty.getText().isEmpty()) {
            
        } else {
            
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            dtm.setRowCount(0);
            try {
               
                ResultSet rs = DB.search("select * from product_raw_items pri inner join raw_matrials r on pri.id_raw=r.idraw_matrials"
                        + " inner join product_rawcost pr on pri.rawcost_id=pr.id where pr.id_product='"+product_Code.getText()+"' ");
                        
                
                
                while (rs.next()) {
                    
                    double totalQty = Double.parseDouble(txt_Qty.getText()) * rs.getDouble("volume");
                    // get relevent Raw Material Stock details
                    ResultSet rs2 = DB.search("SELECT idraw_stock, qty FROM raw_stock WHERE id_rawMatrial='" + rs.getString("id_raw") + "' ");
                    
                    while (rs2.next()) {
                        
                        rawStockNo = rs2.getString("idraw_stock");
                        avaRawQty = rs2.getDouble("qty");
                    }
                    // check stock availablity
                    if (avaRawQty >= totalQty) {
                        
                        Vector v = new Vector();
                        v.add(rawStockNo); 
                        v.add(rs.getString("id_raw"));
                        v.add(rs.getString("name"));
                        v.add(rs.getString("unit"));
                        v.add(decimal.format(totalQty));
                        dtm.addRow(v);
                    } else {
                        
                        WarningMsg msg = new WarningMsg();
                        JOptionPane.showMessageDialog(this, msg.panel, "Out of stock", JOptionPane.PLAIN_MESSAGE);
                    }
                    
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_addActionPerformed

    private void txt_QtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_QtyActionPerformed
        add.grabFocus();
    }//GEN-LAST:event_txt_QtyActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        if (production_Section.getSelectedIndex() == 0 | job_Start.getDate() == null | job_End.getDate() == null
                | date_BOM.getDate() == null | txt_Qty.getText().isEmpty() | product_Code.getText().isEmpty() | table.getRowCount() == 0) {
            
        } else {
            try {
                DB.iud("INSERT INTO bill_of_matrial (job_id, id_product, product_qty, unit, bom_date, req_department, start_date, finish_date, state) VALUES "
                        + "('" + job_No.getText() + "', '" + product_Code.getText() + "', '" + txt_Qty.getText() + "', '" + unit_Product.getText() + "', '" + dateFormat.format(date_BOM.getDate())
                        + "', '" + production_Section.getSelectedItem().toString() + "', '" + dateFormat.format(job_Start.getDate()) + "', '" + dateFormat.format(job_End.getDate()) + "', '0') ");
                
                for (int i = 0; i < table.getRowCount(); i++) {
                    DB.iud(" INSERT INTO bom_item ( job_id, idraw_stock, unit, qty) VALUES ('" + job_No.getText() + "', '" + table.getValueAt(i, 0).toString() + "', '" + table.getValueAt(i, 3).toString() + "', '" + table.getValueAt(i, 4).toString().replace(",", "") + "') ");
                    DB.iud("UPDATE raw_stock SET qty = qty-'" + table.getValueAt(i, 4).toString().replace(",", "") + "' WHERE id_rawMatrial='" + table.getValueAt(i, 1).toString() + "' ");
                }
                
                new Save().setVisible(true);
                clear();
                generateID();
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btn_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelActionPerformed
        
    }//GEN-LAST:event_btn_CancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillOfMatrial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillOfMatrial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillOfMatrial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillOfMatrial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillOfMatrial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_SearchProduct;
    private com.toedter.calendar.JDateChooser date_BOM;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JDateChooser job_End;
    private javax.swing.JLabel job_No;
    private com.toedter.calendar.JDateChooser job_Start;
    public javax.swing.JLabel productName;
    public javax.swing.JTextField product_Code;
    private javax.swing.JComboBox<String> production_Section;
    private javax.swing.JTable table;
    private javax.swing.JLabel topBar;
    private javax.swing.JTextField txt_Qty;
    private javax.swing.JLabel unit_Product;
    // End of variables declaration//GEN-END:variables

    private void generateID() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(job_id) AS id FROM bill_of_matrial");
            if (rs.next()) {
                int rowcount = rs.getInt("id");
                rowcount++;
                job_No.setText("JOB" + dateFormat.format(new Date()).replace("-", "") + String.format("%0" + 4 + "d", rowcount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void tableSettings() {
        JTableHeader tableHeader = table.getTableHeader();
        tableHeader.setFont(new Font("Calibri", Font.BOLD, 14)); // change table header font
        // change Horizontal Alignment in Header Text
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        // set Column Alligment to CENTER
        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);

        // set Column Alligment to RIGHT
        DefaultTableCellRenderer right = new DefaultTableCellRenderer();
        right.setHorizontalAlignment(JLabel.RIGHT);
        
        table.getColumnModel().getColumn(0).setCellRenderer(center);
        table.getColumnModel().getColumn(1).setCellRenderer(center);
        table.getColumnModel().getColumn(3).setCellRenderer(center);
        table.getColumnModel().getColumn(4).setCellRenderer(right);
        
    }
    
    public void getData(String productCode) {
        try {
            ResultSet rs = DB.search(" SELECT per_unit FROM product_rawcost WHERE id_product='" + productCode + "' ");
            if (rs.next()) {
                unit_Product.setText(rs.getString("per_unit"));
                txt_Qty.setToolTipText("Enter Product Quantity in " + rs.getString("per_unit") + "s");
                jLabel8.setToolTipText("Enter Product Quantity in " + rs.getString("per_unit") + "s");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        date_BOM.setDate(null);
        production_Section.setSelectedIndex(0);
        job_Start.setDate(null);
        job_End.setDate(null);
        product_Code.setText(null);
        productName.setText(null);
        txt_Qty.setText(null);
        ((DefaultTableModel) table.getModel()).setRowCount(0);
    }
    
}
